[{"/Users/alexbiddle/Downloads/react-books/books/src/index.js":"1","/Users/alexbiddle/Downloads/react-books/books/src/App.js":"2","/Users/alexbiddle/Downloads/react-books/books/src/reportWebVitals.js":"3","/Users/alexbiddle/Downloads/react-books/books/src/Signup.js":"4","/Users/alexbiddle/Downloads/react-books/books/src/Profile.js":"5","/Users/alexbiddle/Downloads/react-books/books/src/Error.js":"6","/Users/alexbiddle/Downloads/react-books/books/src/Signin.js":"7","/Users/alexbiddle/Downloads/react-books/books/src/API/calls.js":"8","/Users/alexbiddle/Downloads/react-books/books/src/Books.js":"9"},{"size":563,"mtime":1612389720660,"results":"10","hashOfConfig":"11"},{"size":687,"mtime":1612394080589,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1612370926704,"results":"13","hashOfConfig":"11"},{"size":5722,"mtime":1612391144990,"results":"14","hashOfConfig":"11"},{"size":150,"mtime":1612391049020,"results":"15","hashOfConfig":"11"},{"size":168,"mtime":1612389986201,"results":"16","hashOfConfig":"11"},{"size":5603,"mtime":1612468336685,"results":"17","hashOfConfig":"11"},{"size":174,"mtime":1612394121093,"results":"18","hashOfConfig":"11"},{"size":1069,"mtime":1612469805484,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"lp7jpr",{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"23"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/alexbiddle/Downloads/react-books/books/src/index.js",["42","43"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["44","45"],"/Users/alexbiddle/Downloads/react-books/books/src/App.js",["46"],"import logo from './logo.svg';\nimport './App.css';\nimport Signup from './Signup';\nimport Signin from './Signin';\nimport Profile from './Profile';\nimport ErrorPage from './Error';\nimport { Switch, Route } from 'react-router-dom';\nimport Books from './Books';\n\nfunction App() {\n  return (\n    <main>\n      <Switch>\n        <Route path=\"/\" component={Signup} exact/>\n        <Route path=\"/signup\" component={Signup} exact/>\n        <Route path=\"/signin\" component={Signin} exact/>\n        <Route path=\"/profile\" component={Profile} exact/>\n        <Route path=\"/books\" component={Books} exact/>\n        <Route component={ErrorPage}/>\n      </Switch>\n    </main>\n  );\n}\n\nexport default App;\n","/Users/alexbiddle/Downloads/react-books/books/src/reportWebVitals.js",[],"/Users/alexbiddle/Downloads/react-books/books/src/Signup.js",["47","48"],"import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\n\nimport TextField from '@material-ui/core/TextField';\n\n\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\n\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { FaBookOpen } from 'react-icons/fa';\nimport swal from 'sweetalert';\n\nfunction Signup() {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [reEnterPassword, setReEnterPassword] = useState('');\n\n    const useStyles = makeStyles((theme) => ({\n        paper: {\n            marginTop: theme.spacing(8),\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n        },\n        avatar: {\n            margin: theme.spacing(1),\n            backgroundColor: theme.palette.secondary.main,\n        },\n        form: {\n            width: '100%', // Fix IE 11 issue.\n            marginTop: theme.spacing(3),\n        },\n        submit: {\n            margin: theme.spacing(3, 0, 2),\n        },\n    }));\n\n    const classes = useStyles();\n\n\n    const SignUp = () => {\n\n        let errorString = '';\n\n        if (email.length === 0) {\n            errorString += 'Please enter an email address\\n';\n        }\n\n        if (password.length === 0) {\n            errorString += 'Please enter a password\\n';\n        }\n\n        if (reEnterPassword.length === 0) {\n            errorString += 'Please re-enter a password\\n';\n        }\n\n        if (errorString === '') {\n\n            //run axios call here and then show swal\n            //alert\n            // swal({\n            //     title: 'Verification',\n            //     text: 'Please check your inbox to verify your account!',\n            //     icon: 'success'\n            // });\n\n        } else {\n            swal({\n                title: 'Error',\n                text: errorString,\n                icon: 'error'\n            });\n        }\n\n    }\n\n    const customOnChange = (eventName, eventValue) => {\n        switch (eventName) {\n            case 'email':\n                setEmail(eventValue);\n                break;\n            case 'password':\n                setPassword(eventValue);\n                break;\n            case 'reenterpassword':\n                setReEnterPassword(eventValue);\n                break;\n        }\n\n        console.log(eventValue);\n    }\n\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n\n            <div className={classes.paper}>\n                {/* <Avatar className={classes.avatar}>\n\n                </Avatar> */}\n\n                <FaBookOpen size={50} />\n\n\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign up\n                </Typography>\n\n                <form className={classes.form} noValidate>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                autoComplete=\"email\"\n                                name=\"email\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email\"\n                                autoFocus\n                                onChange={(event) => customOnChange('email', event)}\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"password\"\n                                label=\"Password\"\n                                name=\"password\"\n                                autoComplete=\"password\"\n                                onChange={(event) => customOnChange('password', event)}\n                                type=\"password\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"reEnterPassword\"\n                                label=\"Re-enter Password\"\n                                name=\"reEnterPassword\"\n                                autoComplete=\"Re-enter Password\"\n                                onChange={(event) => customOnChange('reenterpassword', event)}\n                                type=\"password\"\n                            />\n                        </Grid>\n\n                        <Button\n                            type=\"button\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                            onClick={SignUp}\n\n                        >Sign Up</Button>\n\n                        <Grid container justify=\"flex-end\">\n                            <Grid item>\n                                <Link href=\"/signin\" variant=\"body2\">\n                                    Already have an account? Sign in\n                                </Link>\n                            </Grid>\n                        </Grid>\n\n\n\n                    </Grid>\n                </form>\n\n\n            </div>\n\n\n\n        </Container>\n    )\n\n\n}\n\nexport default Signup;","/Users/alexbiddle/Downloads/react-books/books/src/Profile.js",[],"/Users/alexbiddle/Downloads/react-books/books/src/Error.js",[],"/Users/alexbiddle/Downloads/react-books/books/src/Signin.js",["49","50"],"/Users/alexbiddle/Downloads/react-books/books/src/API/calls.js",[],"/Users/alexbiddle/Downloads/react-books/books/src/Books.js",["51"],{"ruleId":"52","severity":1,"message":"53","line":6,"column":25,"nodeType":"54","messageId":"55","endLine":6,"endColumn":30},{"ruleId":"52","severity":1,"message":"56","line":6,"column":32,"nodeType":"54","messageId":"55","endLine":6,"endColumn":38},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"52","severity":1,"message":"61","line":1,"column":8,"nodeType":"54","messageId":"55","endLine":1,"endColumn":12},{"ruleId":"52","severity":1,"message":"62","line":2,"column":8,"nodeType":"54","messageId":"55","endLine":2,"endColumn":14},{"ruleId":"63","severity":1,"message":"64","line":83,"column":9,"nodeType":"65","messageId":"66","endLine":93,"endColumn":10},{"ruleId":"52","severity":1,"message":"62","line":5,"column":8,"nodeType":"54","messageId":"55","endLine":5,"endColumn":14},{"ruleId":"63","severity":1,"message":"64","line":102,"column":9,"nodeType":"65","messageId":"66","endLine":109,"endColumn":10},{"ruleId":"52","severity":1,"message":"67","line":4,"column":8,"nodeType":"54","messageId":"55","endLine":4,"endColumn":16},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","no-native-reassign",["68"],"no-negated-in-lhs",["69"],"'logo' is defined but never used.","'Avatar' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'GridList' is defined but never used.","no-global-assign","no-unsafe-negation"]